{"version":3,"file":"static/js/159.ccde57d9.chunk.js","mappings":"mPAIaA,EAAYC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAGtBC,EAAuBJ,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+TAKtBG,EAAAA,EAAQC,OAAOC,QAIXC,GAMfC,EAAqBV,EAAAA,EAAOC,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,+ZAOlBM,GAebG,EAAcZ,EAAAA,EAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,mGAOxBW,EAAWd,EAAAA,EAAOe,GAAEC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,yEAMpBc,EAAYjB,EAAAA,EAAOkB,EAACC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,oHACtBG,EAAAA,EAAQc,KAAKZ,SAQXa,EAAiBrB,EAAAA,EAAOsB,GAAEC,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,wEAK1BqB,EAAiBxB,EAAAA,EAAOyB,GAAEC,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,6IAW1BwB,EAAY3B,EAAAA,EAAO4B,EAACC,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,+1B,iDCVjC,EA1CkB,WAChB,IAAA2B,GAA8BC,EAAAA,EAAAA,YAAgBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACpBI,GAAOC,EAAAA,EAAAA,MAAPD,GAON,OALAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUC,EAAYC,QAAO,SAAAC,GAAI,OAAIA,EAAKN,KAAOO,OAAOP,EAAG,IACjED,EAAWI,EAAQ,GACrB,GAAG,CAACH,KAGFQ,EAAAA,EAAAA,MAAC7C,EAAS,CAAA8C,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,YAAY,OAAOC,eAAe,aAC9CL,EAAAA,EAAAA,MAACxC,EAAoB,CAAAyC,SAAA,EACnBD,EAAAA,EAAAA,MAAChC,EAAW,CAAAiC,SAAA,EACVD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAChC,EAAQ,CAAA+B,SAAC,WACVD,EAAAA,EAAAA,MAAC3B,EAAS,CAAA4B,SAAA,CAAC,IAAS,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAASgB,aAExBN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAChC,EAAQ,CAAA+B,SAAC,gBACVC,EAAAA,EAAAA,KAACzB,EAAc,CAAAwB,SACL,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAASiB,KAAKC,WAAWC,KAAI,SAAAX,GAC5B,OAAOI,EAAAA,EAAAA,KAACtB,EAAc,CAAAqB,SAAiBH,IAAXY,EAAAA,EAAAA,MAC9B,UAGJV,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACnB,EAAS,CAAC4B,KAAa,OAAPrB,QAAO,IAAPA,OAAO,EAAPA,EAASiB,KAAKK,QAAQX,UACrCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBAERC,EAAAA,EAAAA,KAACnB,EAAS,CAAC4B,KAAa,OAAPrB,QAAO,IAAPA,OAAO,EAAPA,EAASiB,KAAKM,QAAQZ,UACrCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,qBAIZC,EAAAA,EAAAA,KAACpC,EAAkB,CAAAmC,UACjBC,EAAAA,EAAAA,KAAA,MAAAD,SAAY,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAASwB,qBAKxB,C","sources":["page/Projects/ProjectID/ProjectID.styled.tsx","page/Projects/ProjectID/ProjectID.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { myColor } from 'assets/colors/colors';\n\nimport ImgP from 'assets/img/home/BackgroundBlurs.png';\nexport const Container = styled.div`\n  flex-grow: 1;\n`;\nexport const ContainerProjectInfo = styled.div`\n \n  display: grid;\n  grid-template-columns: 1fr 1fr;\nheight: 100%; \nborder-top: 1px solid ${myColor.border.primary};\n  @media screen and (max-width: 768px) {\n    grid-template-columns: 1fr;\n\n    background-image: url(${ImgP});\n    background-size: cover;\n    background-position: top;\n    background-repeat: no-repeat;\n  }\n`;\nexport const WrapperNameProject = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  text-align: center;\n\n  background-image: url(${ImgP});\n  background-size: cover;\n  background-repeat: no-repeat;\n\n  h2 {\n    font-size: 3.7rem;\n    font-weight: 700;\n    color: white;\n    text-shadow: 2px 2px 2px black;\n  }\n  @media screen and (max-width: 768px) {\n    grid-row-start: 1;\n    background-image: none;\n  }\n`;\nexport const WrapperInfo = styled.div`\n  padding: 2rem;\n  @media screen and (max-width: 768px) {\n    grid-row-start: 2;\n  }\n`;\n\nexport const SubTitle = styled.h3`\n  color: white;\n  font-size: 1.9rem;\n  margin-bottom: 10px;\n`;\n\nexport const TextAbout = styled.p`\n  color: ${myColor.text.primary};\n  margin-bottom: 20px;\n\n  @media screen and (max-width: 768px) {\n    color: white;\n  }\n`;\n\nexport const TechnologyList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 20px;\n`;\nexport const TechnologyItem = styled.li`\n  width: max-content;\n\n  color: white;\n\n  background-color: #3e5170;\n  border-radius: 6px;\n  margin: 5px;\n  padding: 10px;\n`;\n\nexport const ButtonWeb = styled.a`\n  align-items: center;\n  background-image: linear-gradient(144deg, #af40ff, #5b42f3 50%, #00ddeb);\n  border: 0;\n  border-radius: 8px;\n  box-shadow: rgba(151, 65, 252, 0.2) 0 15px 30px -5px;\n  box-sizing: border-box;\n  color: #ffffff;\n  display: inline-flex;\n  font-family: Phantomsans, sans-serif;\n  font-size: 20px;\n  justify-content: center;\n  line-height: 1em;\n  max-width: 100%;\n  min-width: 140px;\n  padding: 3px;\n  margin: 0px 10px 0px 0px;\n\n  text-decoration: none;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  :hover,\n  :active {\n    outline: 0;\n  }\n  :hover span {\n    background: none;\n  }\n  span {\n    background-color: rgb(5, 6, 45);\n    padding: 16px 24px;\n    border-radius: 6px;\n    width: 100%;\n    height: 100%;\n    transition: 300ms;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  WrapperNameProject,\n  WrapperInfo,\n  SubTitle,\n  TechnologyList,\n  TechnologyItem,\n  TextAbout,\n  ButtonWeb,\n  ContainerProjectInfo,\n} from './ProjectID.styled';\n\nimport { useParams } from 'react-router-dom';\nimport ProjetArray from 'assets/json/project.json';\nimport { nanoid } from 'nanoid';\nimport { ButtonBack } from 'components';\n \n\ninterface Item {\n  id: number;\n  nameProject: string;\n  about: string;\n  info: {\n    frameWork: string;\n    technology: string[];\n    linkGit: string;\n    linkWeb: string;\n  };\n}\nconst ProjectID = () => {\n  const [project, setProject] = useState<Item>();\n  let { id } = useParams();\n\n  useEffect(() => {\n    const Project = ProjetArray.filter(item => item.id === Number(id));\n    setProject(Project[0]);\n  }, [id]);\n\n  return (\n    <Container>\n      <ButtonBack contentText='Back' navigationPage='project'/>\n      <ContainerProjectInfo>\n        <WrapperInfo>\n          <div>\n            <SubTitle>About</SubTitle>\n            <TextAbout> {project?.about}</TextAbout>\n          </div>\n          <div>\n            <SubTitle>Technology</SubTitle>\n            <TechnologyList>\n              {project?.info.technology.map(item => {\n                return <TechnologyItem key={nanoid()}>{item}</TechnologyItem>;\n              })}\n            </TechnologyList>\n          </div>\n          <div>\n            <ButtonWeb href={project?.info.linkGit}>\n              <span>link-GitHub</span>\n            </ButtonWeb>\n            <ButtonWeb href={project?.info.linkWeb}>\n              <span>linkWeb</span>\n            </ButtonWeb>\n          </div>\n        </WrapperInfo>\n        <WrapperNameProject>\n          <h2>{project?.nameProject}</h2>\n        </WrapperNameProject>\n      </ContainerProjectInfo>\n    </Container>\n  );\n};\nexport default ProjectID;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","ContainerProjectInfo","_templateObject2","myColor","border","primary","ImgP","WrapperNameProject","_templateObject3","WrapperInfo","_templateObject4","SubTitle","h3","_templateObject5","TextAbout","p","_templateObject6","text","TechnologyList","ul","_templateObject7","TechnologyItem","li","_templateObject8","ButtonWeb","a","_templateObject9","_useState","useState","_useState2","_slicedToArray","project","setProject","id","useParams","useEffect","Project","ProjetArray","filter","item","Number","_jsxs","children","_jsx","ButtonBack","contentText","navigationPage","about","info","technology","map","nanoid","href","linkGit","linkWeb","nameProject"],"sourceRoot":""}