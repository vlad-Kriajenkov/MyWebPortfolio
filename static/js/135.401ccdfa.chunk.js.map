{"version":3,"file":"static/js/135.401ccdfa.chunk.js","mappings":"uPAGaA,EAAYC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yHAQtBC,EAAgBJ,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yCACXG,EAAAA,EAAQC,OAAOC,SAG9BC,EAAkBT,EAAAA,EAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6GAGVG,EAAAA,EAAQC,OAAOC,SAGjCG,EAAiBX,EAAAA,EAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uKAU3BU,EAAMb,EAAAA,EAAOC,IAAGa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,4DAKhBY,EAAOf,EAAAA,EAAOC,IAAGe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,8GAKnBG,EAAAA,EAAQW,KAAKC,U,2dCwExB,EAvFoB,WAClB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAmB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAgDL,EAAAA,EAAAA,UAAiB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7DE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEpCG,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACRC,EAAwC,QAA7BD,EAAGH,EAAaK,IAAI,iBAAS,IAAAF,OAAA,EAA1BA,EAA4BG,MAAM,UAElCC,IAAhBH,GAAgD,KAAnBA,EAAY,GAC3CH,EAAgB,CAAEV,OAAO,GAADiB,OAAKjB,KAE7BC,EAAUY,EAGd,GAAG,IAEH,IAAMK,EAAa,SAACC,GAClB,IAAMC,EAAwB,OAANpB,QAAM,IAANA,OAAM,EAANA,EAAQqB,SAASF,GAGvClB,EADEmB,EACQ,SAAAE,GAAS,OAAIA,EAAUtB,QAAO,SAAAuB,GAAI,OAAIA,IAASJ,CAAM,GAAC,EAEtD,SAAAG,GAAS,SAAAL,QAAAO,EAAAA,EAAAA,GAAQF,GAAS,CAAEH,GAAS,EAGnD,EAeA,OAbAR,EAAAA,EAAAA,YAAU,WACRD,EAAgB,CAAEV,OAAO,GAADiB,OAAKjB,IAE/B,GAAG,CAACA,KAEJW,EAAAA,EAAAA,YAAU,WAAO,IAADc,EACRZ,EAAwC,QAA7BY,EAAGhB,EAAaK,IAAI,iBAAS,IAAAW,OAAA,EAA1BA,EAA4BV,MAAM,KAChDW,EAASC,EAAa3B,QAAO,SAAAuB,GAAI,OACrCA,EAAKK,KAAKC,WAAWC,MAAK,SAAAD,GAAU,OAAe,OAAXhB,QAAW,IAAXA,OAAW,EAAXA,EAAaQ,SAASQ,EAAW,GAAC,IAE5ExB,EAAoBqB,EACtB,GAAG,CAACjB,KAGFsB,EAAAA,EAAAA,MAACvD,EAAS,CAAAwD,SAAA,EACRC,EAAAA,EAAAA,KAACpD,EAAa,CAAAmD,UACZC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACXC,MAAM,eACNC,eAAe,EACfC,WAAW,EAAKL,UAEhBC,EAAAA,EAAAA,KAAC/C,EAAe,CAAA8C,SACbM,EAAUC,KAAI,SAAAC,GAAyB,IAAtBC,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SACtB,OACET,EAAAA,EAAAA,KAACU,EAAAA,GAAQ,CAEPC,MAAOH,EACPI,OAAQH,EACRxB,WAAYA,GAHPuB,EAMX,WAKNR,EAAAA,EAAAA,KAAC7C,EAAc,CAAA4C,SACM,IAAlBhC,EAAO8C,OACNnB,EAAaY,KAAI,SAAAQ,GAAgC,IAA7BC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAarB,EAAImB,EAAJnB,KACnC,OACEK,EAAAA,EAAAA,KAAC3C,EAAG,CAAA0C,UACFC,EAAAA,EAAAA,KAACiB,EAAAA,GAAW,CAACF,GAAIA,EAAIC,YAAaA,EAAarB,KAAMA,KAD7CoB,EAId,IAC8B,IAA5B5C,EAAiB0C,QACnBb,EAAAA,EAAAA,KAACzC,EAAI,CAAAwC,SAAC,yBAEN5B,EAAiBmC,KAAI,SAAAY,GAAgC,IAA7BH,EAAEG,EAAFH,GAAIC,EAAWE,EAAXF,YAAarB,EAAIuB,EAAJvB,KACvC,OACEK,EAAAA,EAAAA,KAAC3C,EAAG,CAAA0C,UACFC,EAAAA,EAAAA,KAACiB,EAAAA,GAAW,CAACF,GAAIA,EAAIC,YAAaA,EAAarB,KAAMA,KAD7CoB,EAId,QAKV,C","sources":["page/Projects/Projects.styled.tsx","page/Projects/Projects.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { myColor } from 'assets/colors/colors';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-grow: 1;\n  @media screen and (max-width: 426px) {\n    flex-direction: column;\n  }\n`;\n\nexport const WrapperFilter = styled.div`\n  border-right: 1px solid ${myColor.border.primary};\n`;\n\nexport const WrapperCgeckBox = styled.div`\n  padding: 1rem;\n  @media screen and (max-width: 426px) {\n    border-bottom: 1px solid ${myColor.border.primary};\n  }\n`;\nexport const WrapperProject = styled.div`\n  width: 100%;\n\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n\n  @media screen and (max-width: 426px) {\n    grid-template-columns: 1fr;\n  }\n`;\nexport const Box = styled.div`\n  padding: 1rem;\n  flex-direction: row-reverse;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  color: ${myColor.text.seconder};\n`;\n","import React, { FC, useEffect, useState } from 'react';\nimport { CardProject, CheckBox, MenuDropdown } from 'components';\nimport {\n  Container,\n  WrapperProject,\n  Box,\n  Info,\n  WrapperFilter,\n  WrapperCgeckBox,\n} from './Projects.styled';\nimport IconArrya from 'assets/json/icon.json';\nimport ProjectArrya from 'assets/json/project.json';\nimport { useSearchParams } from 'react-router-dom';\n\ninterface Item {\n  id: number;\n  nameProject: string;\n  about: string;\n  info: {\n    frameWork: string;\n    technology: string[];\n    linkGit: string;\n    linkWeb: string;\n  };\n}\n\nconst Projets: FC = () => {\n  const [filter, setFilter] = useState<string[]>([]);\n  const [filteredProjects, setFilteredProjects] = useState<Item[]>([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const filterParms = searchParams.get('filter')?.split(',');\n\n    if (filterParms === undefined || filterParms[0] === '') {\n      setSearchParams({ filter: `${filter}` });\n    } else {\n      setFilter(filterParms);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleEven = (skills: string) => {\n    const dublicateSkills = filter?.includes(skills);\n\n    if (dublicateSkills) {\n      setFilter(prevState => prevState.filter(item => item !== skills));\n    } else {\n      setFilter(prevState => [...prevState, skills]);\n    }\n    \n  };\n\n  useEffect(() => {\n    setSearchParams({ filter: `${filter}` });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filter]);\n\n  useEffect(() => {\n    const filterParms = searchParams.get('filter')?.split(',');\n    const arrays = ProjectArrya.filter(item =>\n      item.info.technology.some(technology => filterParms?.includes(technology))\n    );\n    setFilteredProjects(arrays);\n  }, [searchParams]);\n\n  return (\n    <Container>\n      <WrapperFilter>\n        <MenuDropdown\n          lable=\"projets-info\"\n          titlePageLink={true}\n          typeLinks={true}\n        >\n          <WrapperCgeckBox>\n            {IconArrya.map(({ name, nameIcon }) => {\n              return (\n                <CheckBox\n                  key={name}\n                  label={name}\n                  idIcon={nameIcon}\n                  handleEven={handleEven}\n                />\n              );\n            })}\n          </WrapperCgeckBox>\n        </MenuDropdown>\n      </WrapperFilter>\n\n      <WrapperProject>\n        {filter.length === 0 ? (\n          ProjectArrya.map(({ id, nameProject, info }) => {\n            return (\n              <Box key={id}>\n                <CardProject id={id} nameProject={nameProject} info={info} />\n              </Box>\n            );\n          })\n        ) : filteredProjects.length === 0 ? (\n          <Info>There's no match :( </Info>\n        ) : (\n          filteredProjects.map(({ id, nameProject, info }) => {\n            return (\n              <Box key={id}>\n                <CardProject id={id} nameProject={nameProject} info={info} />\n              </Box>\n            );\n          })\n        )}\n      </WrapperProject>\n    </Container>\n  );\n};\nexport default Projets;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","WrapperFilter","_templateObject2","myColor","border","primary","WrapperCgeckBox","_templateObject3","WrapperProject","_templateObject4","Box","_templateObject5","Info","_templateObject6","text","seconder","_useState","useState","_useState2","_slicedToArray","filter","setFilter","_useState3","_useState4","filteredProjects","setFilteredProjects","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","_searchParams$get","filterParms","get","split","undefined","concat","handleEven","skills","dublicateSkills","includes","prevState","item","_toConsumableArray","_searchParams$get2","arrays","ProjectArrya","info","technology","some","_jsxs","children","_jsx","MenuDropdown","lable","titlePageLink","typeLinks","IconArrya","map","_ref","name","nameIcon","CheckBox","label","idIcon","length","_ref2","id","nameProject","CardProject","_ref3"],"sourceRoot":""}