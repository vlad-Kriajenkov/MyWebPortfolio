{"version":3,"file":"static/js/591.70e65164.chunk.js","mappings":"yPAEaA,EAAUC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sMASLC,EAAAA,EAAQC,OAAOC,SAI9BC,EAAYP,EAAAA,EAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,6OAITC,EAAAA,EAAQC,OAAOC,QAEbF,EAAAA,EAAQC,OAAOC,SAM9BG,EAAUT,EAAAA,EAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,yPAIHC,EAAAA,EAAQC,OAAOC,QAKZF,EAAAA,EAAQC,OAAOC,SAInCK,EAASX,EAAAA,EAAOY,GAAEC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,oFACpBC,EAAAA,EAAQU,KAAKR,SAMXS,EAAQf,EAAAA,EAAOgB,GAAEC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,sEAEnBC,EAAAA,EAAQU,KAAKI,QAGXC,EAAOnB,EAAAA,EAAOoB,EAACC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,8CAEjBC,EAAAA,EAAQU,KAAKQ,UAGXC,EAAOvB,EAAAA,EAAOY,GAAEY,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,uFAIhBC,EAAAA,EAAQU,KAAKQ,U,SCe1B,EAhEgB,WACd,IAAAG,GAAoCC,EAAAA,EAAAA,UAAmB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAchC,OAZAI,EAAAA,EAAAA,YAAU,YACoB,SAACC,GAE3B,IADA,IAAIC,EAAM,GACDC,EAAQ,EAAGA,GAASF,EAAQE,IAAS,CAC5C,IAAMC,EAAIC,OAAOF,GACjBD,EAAII,KAAKF,GACTL,EAAcG,EAChB,CACF,CACAK,CAAoB,GACtB,GAAG,KAGDC,EAAAA,EAAAA,MAACxC,EAAO,CAAAyC,SAAA,EACNC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,YAAY,cACxBJ,EAAAA,EAAAA,MAAChC,EAAS,CAAAiC,SAAA,EACRD,EAAAA,EAAAA,MAAC9B,EAAO,CAAA+B,SAAA,EACNC,EAAAA,EAAAA,KAAC9B,EAAM,CAAA6B,SACJX,EAAWe,KAAI,SAAAC,GACd,OAAOJ,EAAAA,EAAAA,KAAA,MAAAD,SAAoBK,IAAXC,EAAAA,EAAAA,MAClB,OAGFP,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC1B,EAAK,CAAAyB,SAAC,eAEPC,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAC,yUASVD,EAAAA,EAAAA,MAAC9B,EAAO,CAAA+B,SAAA,EACNC,EAAAA,EAAAA,KAAC9B,EAAM,CAAA6B,SACJX,EAAWe,KAAI,SAAAC,GACd,OAAOJ,EAAAA,EAAAA,KAAA,MAAAD,SAAoBK,IAAXC,EAAAA,EAAAA,MAClB,OAEFP,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC1B,EAAK,CAAAyB,SAAC,iBACPD,EAAAA,EAAAA,MAAChB,EAAI,CAAAiB,SAAA,EACHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAENC,EAAAA,EAAAA,KAAC1B,EAAK,CAAAyB,SAAC,qBACPD,EAAAA,EAAAA,MAAChB,EAAI,CAAAiB,SAAA,EACHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2CAOlB,C","sources":["page/about/About-Personal/About-me/AboutMe.styled.tsx","page/about/About-Personal/About-me/AboutMe.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { myColor } from 'assets/colors/colors';\nexport const FlexBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  button {\n    p {\n      padding: 0.4rem 0.08rem;\n    }\n  }\n  @media screen and (max-width: 425px) {\n    border-top: 1px solid ${myColor.border.primary};\n  }\n`;\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  height: 100%;\n  border-top: 1px solid ${myColor.border.primary};\n  @media screen and (max-width: 426px) {\n    border-top: 1px solid ${myColor.border.primary};\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding: 10px 20px;\n  display: flex;\n  :first-of-type {\n    border-right: 1px solid ${myColor.border.primary};\n  }\n  @media screen and (max-width: 426px) {\n    :first-of-type {\n      border-right: none;\n      border-bottom: 1px solid ${myColor.border.primary};\n    }\n  }\n`;\nexport const Number = styled.ul`\n  color: ${myColor.text.primary};\n  margin-right: 15px;\n  li {\n    font-size: 1.2rem;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 1.2rem;\n  color: ${myColor.text.accent};\n  margin-bottom: 20px;\n`;\nexport const Text = styled.p`\n  font-size: 1.2rem;\n  color: ${myColor.text.seconder};\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 20px;\n  li {\n    font-size: 1.2rem;\n    color: ${myColor.text.seconder};\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { ButtonBack } from 'components';\nimport { nanoid } from 'nanoid';\nimport {\n  FlexBox,\n  Container,\n  Number,\n  Title,\n  Text,\n  Wrapper,\n  List,\n} from './AboutMe.styled';\nconst AboutMe = () => {\n  const [arryNumber, setArryNumber] = useState<string[]>([]);\n\n  useEffect(() => {\n    const genereiteArryNumber = (number: number) => {\n      let arr = [];\n      for (let index = 1; index <= number; index++) {\n        const q = String(index);\n        arr.push(q);\n        setArryNumber(arr);\n      }\n    };\n    genereiteArryNumber(17);\n  }, []);\n\n  return (\n    <FlexBox>\n      <ButtonBack contentText=\"About-me\" />\n      <Container>\n        <Wrapper>\n          <Number>\n            {arryNumber.map(item => {\n              return <li key={nanoid()}>{item}</li>;\n            })}\n          </Number>\n\n          <div>\n            <Title> About me</Title>\n\n            <Text>\n              I have 1 year and 6 months of IT experience under my belt. During\n              this time I realized 3 projects on Freelance, two projects were\n              made for Ukraine, 1 for UK. More than a year worked in a company\n              on the position of HTML-Delevoper. I work fully on two frameworks\n              (Vue / React). In my spare time I do my own pet-projects\n            </Text>\n          </div>\n        </Wrapper>\n        <Wrapper>\n          <Number>\n            {arryNumber.map(item => {\n              return <li key={nanoid()}>{item}</li>;\n            })}\n          </Number>\n          <div>\n            <Title>SOFT SKILLS</Title>\n            <List>\n              <li>Teamwork</li>\n              <li>Eager to learn</li>\n              <li>Inquisitive</li>\n              <li>Versatile</li>\n            </List>\n            <Title>LANGUAGE SKILLS</Title>\n            <List>\n              <li>Ukrainian - native</li>\n              <li>English- Elementary(A2+)</li>\n            </List>\n          </div>\n        </Wrapper>\n      </Container>\n    </FlexBox>\n  );\n};\n\nexport default AboutMe;\n"],"names":["FlexBox","styled","div","_templateObject","_taggedTemplateLiteral","myColor","border","primary","Container","_templateObject2","Wrapper","_templateObject3","Number","ul","_templateObject4","text","Title","h2","_templateObject5","accent","Text","p","_templateObject6","seconder","List","_templateObject7","_useState","useState","_useState2","_slicedToArray","arryNumber","setArryNumber","useEffect","number","arr","index","q","String","push","genereiteArryNumber","_jsxs","children","_jsx","ButtonBack","contentText","map","item","nanoid"],"sourceRoot":""}